version: 2
jobs:
  build:
    working_directory: ~/learning-site
    docker:
      - image: circleci/node:10.12.0-stretch
    steps:
      - run:
          name: "Workaround 'invoke-rc.d: policy-rc.d denied execution of start'"
          command: |
            sudo sed -i 's/^exit 101$/exit 0/' /usr/sbin/policy-rc.d
            cat /usr/sbin/policy-rc.d
      - run:
          name: Enable Apache CouchDB package repository
          command: |
            (distribution=stretch; echo "deb https://apache.bintray.com/couchdb-deb ${distribution} main") \
            | sudo tee -a /etc/apt/sources.list
      - run:
          name: Install CouchDB package repository key
          command: |
            curl -L https://couchdb.apache.org/repo/bintray-pubkey.asc \
            | sudo apt-key add -
      - run:
          name: Install CouchDB
          command: |
            sudo apt-get install apt-transport-https
            sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade
            bash -s <<'EOF' <(echo $TEST_COUCHDB_ADMIN_PASS)
            password=$(< "$1")
            echo "couchdb couchdb/mode select standalone
            couchdb couchdb/mode seen true
            couchdb couchdb/bindaddress string 127.0.0.1
            couchdb couchdb/bindaddress seen true
            couchdb couchdb/adminpass password $password
            couchdb couchdb/adminpass seen true
            couchdb couchdb/adminpass_again password $password
            couchdb couchdb/adminpass_again seen true" | sudo debconf-set-selections
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q couchdb
            EOF
      - run:
          name: Ensure CouchDB is started
          command: |
            timeout 5 bash -c 'until $(curl --output /dev/null --silent --fail http://localhost:5984/_up); do sleep 0.5; done' \
            || curl --fail http://localhost:5984/_up
      - run:
          name: Configure CouchDB learning-site user
          command: |
            curl -X PUT localhost:5984/_users/org.couchdb.user:learning-site \
            -H 'Content-Type: application/json' \
            -d '{ "name": "learning-site", "password": "'"$TEST_COUCHDB_USER_PASS"'", "roles": [ "learning-site" ], "type": "user" }' \
            -u admin:$TEST_COUCHDB_ADMIN_PASS
            curl -X POST localhost:5984/_session -d "name=admin&password=$TEST_COUCHDB_ADMIN_PASS"
            curl -X POST localhost:5984/_session -d "name=learning-site&password=$TEST_COUCHDB_USER_PASS"
      - checkout
      - run:
          name: update-npm
          command: sudo npm install -g npm
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}-{{ checksum "learning-site-ui/package.json" }}
            - v1-dependencies-{{ checksum "package.json" }}-
            - v1-dependencies-
      - run:
          name: install-dependencies
          command: npm install && cd learning-site-ui && npm install
      - save_cache:
          paths:
            - node_modules
            - learning-site-ui/node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-{{ checksum "learning-site-ui/package.json" }}
      - run:
          name: run-tests
          command: |
            export NODE_CONFIG='{ "couchDb": { "admin": "admin", "userPass": "'"$TEST_COUCHDB_USER_PASS"'", "adminPass": "'"$TEST_COUCHDB_ADMIN_PASS"'" } }'
            npm test && npm run test:ui
      - run:
          name: install-chromium-dependencies-for-test
          command: |
            sudo apt-get install gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 \
            libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0  \
            libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 \
            libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 \
            libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release \
            xdg-utils wget
      - run:
          name: run-acceptance-tests
          command: |
            export NODE_CONFIG='{ "couchDb": { "admin": "admin", "userPass": "'"$TEST_COUCHDB_USER_PASS"'", "adminPass": "'"$TEST_COUCHDB_ADMIN_PASS"'" } }'
            npm run build:ui && npm run test:ci-acceptance
      - run: npm run build
      - run:
          name: package-app
          command: |
            cd ..
            tar -zcf learning-site.tar.gz learning-site/
      - add_ssh_keys:
          fingerprints:
            - "d6:68:4a:36:93:56:43:55:e7:28:a5:38:ea:3f:32:7b"
      - run:
          name: add-ssh-host-public-key-to-known-hosts
          command: echo "$SSH_HOST $SSH_HOST_PUB_KEY_TYPE $SSH_HOST_PUB_KEY" >> ~/.ssh/known_hosts
      - run:
          name: copy-deploy-scripts-to-remote
          command: |
            shopt -s extglob
            mkdir -p learning-site-bin && cp -R bin/!(www) learning-site-bin
            chmod +x learning-site-bin/*
            scp -rp learning-site-bin $SSH_USER@$SSH_HOST:/tmp
      - run:
          name: deploy-app
          command: |
            echo "$COUCHDB_PASS" | ssh $SSH_USER@$SSH_HOST /tmp/learning-site-bin/configure-db
            scp ~/learning-site.tar.gz  $SSH_USER@$SSH_HOST:/tmp
            ssh $SSH_USER@$SSH_HOST /tmp/learning-site-bin/deploy
      - run:
          name: smoke-test
          command: curl --fail $SSH_HOST
